{"version":3,"sources":["./src/services/prescription.service.ts","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/services/common.service.ts","./node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./src/services/patient.service.ts","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./src/modules/form.module.ts","./src/services/push-notification.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAwD;AACL;AACM;AAEZ;AACI;AAEC;AACD;IAMpC,mBAAmB,SAAnB,mBAAoB,SAAQ,qEAAW;IAElD,YACsB,IAAgB,EAChB,OAAe,EACnC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,OAAoB;QAElB,KAAK,CAAC,IAAI,EAAE,OAAO,GAAG,kBAAkB,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,mBAAmB,CAAC,KAAa;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,OAAO,GAAG,iBAAiB,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC;aAC7F,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/E,iEAAU,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACvB,MAAM,GAAG,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,mBAAmB,CAAC,EAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,OAAO,GAAG,IAAI,EAAE,EAAE,CAAC;aACzD,IAAI,CACH,iEAAU,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACvB,MAAM,GAAG,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACN,CAAC;CACJ;;YAxCQ,+DAAU,uBAUd,oDAAM,SAAC,+DAAU;yCACjB,oDAAM,SAAC,UAAU;YAhBb,8DAAc;YAAE,sDAAM;YAGtB,6DAAa;YADb,yDAAW;;AAUP,mBAAmB;IAH/B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,mBAAmB,CAiC/B;AAjC+B;;;;;;;;;;;;;ACdhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;ACtC1C;AACM;IAKpC,aAAa,SAAb,aAAa;IACxB,YAAoB,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;IAAG,CAAC;IAE5C,YAAY,CAAC,MAAc,EAAE,OAAe,EAAE,WAAmB,IAAI;;YACzE,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACxC,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,QAAQ;aACnB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC;KAAA;CACF;;YAjBQ,8DAAe;;AAKX,aAAa;IAHzB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,aAAa,CAYzB;AAZyB;;;;;;;;;;;;;ACN1B;AAAA;AAAA;AAAA;AAAA;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,mEAAmE,qDAAoB;AACvF,kEAAkE,qDAAsB;AACxF;AACA;AACA,MAAM,6DAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AAA8D;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;;;;;;;;;;AC7GqB;AACI;AACC;AACM;AACZ;AACA;AACI;AACA;IAKpC,cAAc,SAAd,cAAe,SAAQ,yDAAW;IAE7C,YACsB,IAAgB,EAChB,OAAe,EACnC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,OAAoB;QAEpB,KAAK,CAAC,IAAI,EAAE,OAAO,GAAG,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACvE,CAAC;IAED,sBAAsB,CAAC,KAAK;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,yBAAyB,CAAC,KAAa,EAAE,IAAc;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,iBAAiB,GAAG,UAAU,kBAAkB,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACtH,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/C,iEAAU,CAAC,GAAG,CAAC,EAAE,CAAC,uDAAU,CAAC,GAAG,CAAC,CAAC,CACnC,CAAC;IACN,CAAC;IAED,MAAM,CAAC,MAAc,EAAE,MAAsB;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,WAAW,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACzF,IAAI,CACH,0DAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/C,iEAAU,CAAC,GAAG,CAAC,EAAE,CAAC,uDAAU,CAAC,GAAG,CAAC,CAAC,CACnC,CAAC;IACN,CAAC;CACF;;YA/CQ,+DAAU,uBAcd,oDAAM,SAAC,+DAAU;yCACjB,oDAAM,SAAC,UAAU;YAbb,8DAAc;YAAE,sDAAM;YAGtB,6DAAa;YAFb,yDAAW;;AAQP,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAoC1B;AApC0B;;;;;;;;;;;;;ACZ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;;;;ACzG3F;AACyB;IAerD,UAAU,SAAV,UAAU;CAAI;AAAd,UAAU;IAXtB,8DAAQ,CAAC;QACR,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE;YACP,0DAAW;YACX,kEAAmB;SACpB;QACD,OAAO,EAAE;YACP,0DAAW;YACX,kEAAmB;SACpB;KACF,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACf4B;AACR;AAGI;AACL;AAEK;AAEe;IAOjD,uBAAuB,SAAvB,uBAAuB;IAElC,YACU,kBAAsC,EACtC,QAAkB,EAClB,QAAsB,EACtB,UAA0B;QAH1B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAAc;QACtB,eAAU,GAAV,UAAU,CAAgB;QAElC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YAC9B,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAM,GAAG,EAAC,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","file":"common.js","sourcesContent":["import { HttpService } from 'src/services/http.service';\nimport { Inject, Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from './alert.service';\nimport { AuthService } from './auth.service';\nimport { LoggerService } from './logger.service';\nimport { StorageService } from './storage.service';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrescriptionService extends HttpService {\n\n  constructor(\n    @Inject(HttpClient) http: HttpClient,\n    @Inject('BASE_URL') baseUrl: string,\n    route: ActivatedRoute,\n    router: Router,\n    logger: LoggerService,\n    authSvc: AuthService,\n    ) {\n      super(http, baseUrl + 'api/Prescription', route, router, logger, authSvc);\n    }\n\n    getLastPrescription(email: string) {\n      return this.http.get<IPrescription>(this.baseUrl + `/Last?keyword=${encodeURIComponent(email)}`)\n        .pipe(\n          tap(data => { this.logger.log('getLast_Prescription', JSON.stringify(data)); }),\n          catchError(err => {\n            this.logger.error(err);\n            throw err;\n          })\n        );\n    }\n\n    getPrescriptionById(id: number): Observable<IPrescription> {\n      return this.http.get<IPrescription>(this.baseUrl + `/${id}`)\n        .pipe(\n          catchError(err => {\n            this.logger.error(err);\n            throw err;\n          })\n        );\n    }\n}\n\n\n\nexport interface IPrescription {\n  patientEmail: string;\n  id: number;\n  exerciseTypeValue: string;\n  exerciseTypes: Array<string>;\n  hrMin: number;\n  hrMax: number;\n  steps: Array<IPrescriptionStep>;\n  regBy: string;\n  regDate: Date;\n  confirmDate: Date | null;\n}\n\nexport interface IPrescriptionStep {\n  sequence: number;\n  type: string;\n  minute: number;\n}\n\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommonService {\n  constructor(private toastCtrl: ToastController) {}\n\n  async presentToast(header: string, message: string, duration: number = 1000) {\n    const toast = await this.toastCtrl.create({\n      header: header,\n      message: message,\n      duration: duration,\n      position: 'bottom',\n    });\n    return toast.present();\n  }\n}\n","import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-f49d994d.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","import { Observable, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { HttpService } from './http.service';\nimport { LoggerService } from './logger.service';\nimport { tap, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService extends HttpService {\n\n  constructor(\n    @Inject(HttpClient) http: HttpClient,\n    @Inject('BASE_URL') baseUrl: string,\n    route: ActivatedRoute,\n    router: Router,\n    logger: LoggerService,\n    authSvc: AuthService,\n  ) {\n    super(http, baseUrl + 'api/Patient', route, router, logger, authSvc);\n  }\n\n  getPatientPersonalInfo(email): Observable<IPatient> {\n    return this.http.get<IPatient>(`${this.baseUrl}/${email}`);\n  }\n\n  updatePatientPersonalInfo(email: string, info: IPatient) {\n    return this.http.put(`${this.baseUrl}/${email}`, info);\n  }\n\n  checkIdDuplicate(email: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/CheckDuplicate` + `?email=${encodeURIComponent(email)}`, { headers: this.headers })\n      .pipe(\n        tap(data => { this.logger.log('data', data); }),\n        catchError(err => throwError(err))\n      );\n  }\n\n  signUp(domain: string, params: IPatientSignUp) {\n    return this.http.post(`${this.baseUrl}/SignUp/${domain}`, params, { headers: this.headers })\n      .pipe(\n        tap(data => { this.logger.log('data', data); }),\n        catchError(err => throwError(err))\n      );\n  }\n}\n\nexport interface IPatient {\n  email: string;\n  name: string;\n  phone: string;\n  birthDate: Date | null;\n  gender: boolean;\n  height: number;\n  weight: number;\n  assignedUserEmail: string;\n\n  hasDiabets: boolean;\n  hasHypertension: boolean;\n  smokeStatus: number;\n  hasDyslipidemia: boolean;\n  hasCardiacDisease: boolean;\n  hasIcdinserted: boolean;\n  hasRegularExercise: boolean;\n\n  diabetsDescription: string;\n  hypertensionDescription: string;\n  smokeDescription: string;\n  dyslipidemiaDescription: string;\n  cardiacDiseaseDescription: string;\n  icdinsertedDescription: string;\n  regularExerciseDescription: string;\n  etc: string;\n}\n\nexport interface ISignUp {\n  email: string;\n  name: string;\n}\n\nexport interface IPatientSignUp extends ISignUp {\n  password: string;\n}\n\nexport interface ICheckDuplicateResponse {\n  isDuplicate: boolean;\n  regDate: string;\n}\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class FormModule { }\n","import { WEEKDAYS } from './../constants/common';\nimport { StorageService } from './storage.service';\nimport { Injectable } from '@angular/core';\nimport {\n    ELocalNotificationTriggerUnit, ILocalNotification, ILocalNotificationEvery, LocalNotifications\n} from '@ionic-native/local-notifications/ngx';\nimport { Platform } from '@ionic/angular';\n\nimport { AlertService } from './alert.service';\nimport { INotification } from './notification-setting.service';\nimport { NOTIFICATION_LIST } from 'src/constants/storage-key';\n\ndeclare const cordova;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PushNotificationService {\n\n  constructor(\n    private localNotifications: LocalNotifications,\n    private platForm: Platform,\n    private alertSvc: AlertService,\n    private storageSvc: StorageService\n    ) {\n    this.platForm.ready().then(() => {\n      this.localNotifications.on('click').subscribe(async res => {\n        console.log('click:', res);\n      //   let msg = res.data ? res.data.page : ''\n      //   await this.alertSvc.presentCustomizeAlert({\n      //     message: msg,\n      //     title: res.title,\n      //     subTitle: res.text,\n      //     backDropDismiss:  false,\n      //     buttons: [{\n      //       text: '확인',\n      //     }]\n      //   })\n      });\n\n      this.localNotifications.on('trigger').subscribe(async res => {\n        console.log('trigger:', res);\n      //   let msg = res.data ? res.data.page : ''\n      //   await this.alertSvc.presentCustomizeAlert({\n      //     message: msg,\n      //     title: res.title,\n      //     subTitle: res.text,\n      //     backDropDismiss:  false,\n      //     buttons: [{\n      //       text: '확인',\n      //     }]\n      //   })\n      });\n    });\n  }\n\n  prepareNotification(title: string, text: string) {\n    this.localNotifications.schedule({\n      title,\n      text,\n    });\n  }\n\n  scheduleNotification2(title: string, text: string) {\n    this.localNotifications.schedule({\n      title,\n      text,\n      data: {data: 'routing...'},\n      trigger: {in: 5, unit: ELocalNotificationTriggerUnit.SECOND},\n      foreground: true\n    });\n  }\n\n  recurringNotification(title: string, text: string) {\n    this.localNotifications.schedule({\n      title,\n      text,\n      data: {page: 'routing...'},\n      trigger: {in: 5, unit: ELocalNotificationTriggerUnit.SECOND},\n      foreground: true\n    });\n  }\n\n  setNotification(notification: INotification) {\n    notification.repeatWeekday.forEach((weekday) => {\n      const hour = +notification.time.substring(0, notification.time.indexOf(':'));\n      const minute = +notification.time.substring(notification.time.indexOf(':') + 1);\n      const alarm =  {\n        id: +`${notification.id}${weekday.id}`,\n        title: '운동시간입니다',\n        text: '운동합시다!!!',\n        // data: { page: 'routing...' },\n        vibrate: notification.vibration,\n        silent: !notification.sound,\n        sound: notification.music,\n        count: 1,\n        every: { weekday: weekday.id, hour, minute, second: 0 } as ILocalNotificationEvery,\n        foreground: true,\n      };\n      this.scheduleNotification(alarm);\n    });\n  }\n\n  scheduleNotification(options: ILocalNotification) {\n    this.localNotifications.schedule(options);\n    // cordova.plugins.notification.local.schedule(options);\n  }\n\n  async deleteNotificationById(id: number) {\n    await this.localNotifications.cancel(id);\n  }\n\n  async getScheduledNotifications() {\n    const notis = await this.localNotifications.getAll();\n    console.warn(notis);\n  }\n\n  async clearAllNotification() {\n    await this.localNotifications.cancelAll();\n    await this.localNotifications.clearAll();\n    await this.storageSvc.remove(NOTIFICATION_LIST);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}