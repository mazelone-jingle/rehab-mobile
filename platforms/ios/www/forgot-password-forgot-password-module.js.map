{"version":3,"sources":["./src/app/forgot-password/forgot-password.page.ts","./src/services/register.service.ts","./src/app/forgot-password/forgot-password.module.ts","./src/services/alert.service.ts","./src/app/forgot-password/forgot-password-routing.module.ts","./src/app/forgot-password/forgot-password.page.scss","./src/app/forgot-password/forgot-password.page.html"],"names":[],"mappings":"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","file":"forgot-password-forgot-password-module.js","sourcesContent":["import { AlertService } from './../../services/alert.service';\nimport { LoggerService } from './../../services/logger.service';\nimport { RegisterService } from './../../services/register.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage implements OnInit {\n  forgotPwdForm: FormGroup;\n  get email() { return this.forgotPwdForm.get('email') }\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private registerSvc: RegisterService,\n    private logger: LoggerService,\n    private alertSvc: AlertService\n    ) {\n    this.buildForm();\n  }\n\n  ngOnInit() {\n  }\n\n  buildForm() {\n    this.forgotPwdForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n    })\n  }\n\n  resetPassword() {\n    this.registerSvc.forgotPassword(this.getEmail())\n    .subscribe(res => {\n      this.logger.log('forgot password.result', res);\n      this.alertSvc.presentAlert('확인 메일이 발송되었습니다.', false, () => this.router.navigate(['/login']));\n    }, err => {\n      this.logger.error(err);\n    }, () => {\n    });\n  }\n\n  backToLogin() {\n    history.back();\n  }\n\n  getEmail() { return this.forgotPwdForm.get('email').value; }\n\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { catchError, tap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { LoggerService } from './logger.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService extends HttpService {\n\n  constructor(\n    @Inject('BASE_URL') baseUrl: string,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(HttpClient) http: HttpClient,\n    route: ActivatedRoute,\n    router: Router,\n    logger: LoggerService,\n    authSvc: AuthService,) {\n      super(http, baseUrl + 'api/Register', route, router, logger, authSvc);\n  }\n\n  forgotPassword(email: string) {\n    return this.http.put(`${this.baseUrl}/ForgotPassword?userEmail=${encodeURIComponent(email)}`, null, {headers: this.headers})\n    .pipe(\n      tap(data => { this.logger.log('data', data); }),\n      catchError(err => {\n        this.logger.log('err', err);\n        return of();\n      })\n    );\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\nimport { FormModule } from 'src/modules/form.module';\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { map } from 'rxjs/operators';\nimport { LanguageService } from 'src/services/language.service';\nimport { HttpClient } from '@angular/common/http';\n\nconst createTranslateLoader = (http: HttpClient) => new TranslateHttpLoader(http, './assets/i18n/forgot-password/', '.json');\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ForgotPasswordPageRoutingModule,\n    FormModule,\n    TranslateModule.forChild({\n      loader: {\n          provide: TranslateLoader,\n          useFactory: createTranslateLoader,\n          deps: [HttpClient]\n      },\n      isolate: true\n    })\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {\n  language$ = this.languageService.language$;\n    constructor(\n        private translateService: TranslateService,\n        private languageService: LanguageService,\n    ) {\n        this.language$.pipe(map(language => language.lang)).subscribe(lang => this.translateService.use(lang));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private alertController: AlertController) { }\n\n  async presentAlert(msg: string, backdropDismiss: boolean = true, callback = () => {}) {\n    const alert = await this.alertController.create({\n      message: msg,\n      buttons: [{\n        text: '확인',\n        handler: callback\n      }],\n      backdropDismiss,\n    });\n\n    await alert.present();\n  }\n\n  async presentCustomizeAlert(options) {\n    const alert = await this.alertController.create(options);\n    await alert.present();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordPageRoutingModule {}\n","export default \"ion-item {\\n  --highlight-height: 0;\\n}\\n\\nion-input, ion-button {\\n  height: 60px;\\n}\\n\\n.title-default {\\n  text-align: center;\\n  margin: 8px 0;\\n  font-weight: bold;\\n}\\n\\n.wrap {\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.wrap .content {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.card {\\n  padding: 5px;\\n}\\n\\n.card .button {\\n  font-size: 16px;\\n}\\n\\n.find-pwd-btn {\\n  margin-top: 20px;\\n}\\n\\n.back-to-login {\\n  margin: 20px;\\n  text-align: center;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2ZvcmdvdC1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxxQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUFFO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUFFSjs7QUFFQTtFQUNFLFlBQUE7QUFDRjs7QUFBRTtFQUNFLGVBQUE7QUFFSjs7QUFFQTtFQUNFLGdCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FBQ0YiLCJmaWxlIjoiZm9yZ290LXBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pdGVtIHtcclxuICAgIC0taGlnaGxpZ2h0LWhlaWdodDogMDtcclxufVxyXG5cclxuaW9uLWlucHV0LCBpb24tYnV0dG9uIHtcclxuICAgIGhlaWdodDogNjBweDtcclxufVxyXG5cclxuLnRpdGxlLWRlZmF1bHQge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW46IDhweCAwO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4ud3JhcCB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAuY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG59XHJcblxyXG4uY2FyZCB7XHJcbiAgcGFkZGluZzogNXB4O1xyXG4gIC5idXR0b24ge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxufVxyXG5cclxuLmZpbmQtcHdkLWJ0biB7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxuLmJhY2stdG8tbG9naW4ge1xyXG4gIG1hcmdpbjogMjBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcbiJdfQ== */\";","export default \"<div class=\\\"wrap\\\">\\n  <div class=\\\"content\\\">\\n    <ion-card class=\\\"card\\\">\\n      <ion-title>{{'forgot_password' | translate}}</ion-title>\\n      <form [formGroup]=\\\"forgotPwdForm\\\" novalidate *ngIf=\\\"forgotPwdForm\\\">\\n        <ion-item class=\\\"form-group\\\">\\n          <ion-label for=\\\"email\\\" position=\\\"fixed\\\">{{'email' | translate}}</ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"></ion-input>\\n        </ion-item>\\n        <div *ngIf=\\\"email.invalid && email.touched\\\">\\n          <small style=\\\"color: red;\\\" *ngIf=\\\"email.errors.required\\\">이메일을 입력해주세요</small>\\n          <small style=\\\"color: red;\\\" *ngIf=\\\"email.errors.email\\\">올바른 이메일 형식이 아닙니다</small>\\n        </div>\\n      </form>\\n\\n      <ion-button class=\\\"find-pwd-btn\\\" expand=\\\"block\\\" [disabled]=\\\"!forgotPwdForm.valid\\\" (click)=\\\"resetPassword()\\\">{{'reset_password' | translate}}</ion-button>\\n      <div class=\\\"back-to-login\\\" (click)=\\\"backToLogin()\\\">\\n        <a >{{'backToLogin' | translate}}</a>\\n      </div>\\n    </ion-card>\\n  </div>\\n</div>\\n\";"],"sourceRoot":"webpack:///"}