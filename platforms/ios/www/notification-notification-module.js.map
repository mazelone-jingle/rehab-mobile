{"version":3,"sources":["./src/app/notification/notification.page.html","./src/app/notification/notification.module.ts","./src/app/notification/notification.page.scss","./src/app/notification/notification.page.ts","./src/app/notification/notification-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,iNAAkJ,8CAA8C,gQAAgQ,0BAA0B,yhBAAyhB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz9B;AACM;AACF;AAEA;AAEiC;AAEvB;AACW;AACuB;AACxB;AAC5B;AAC2B;AACd;AAE3C,SAAS,qBAAqB,CAAC,IAAgB;IACpD,OAAO,IAAI,8EAAmB,CAAC,IAAI,EAAE,6BAA6B,EAAE,OAAO,CAAC,CAAC;AAC/E,CAAC;IAoBY,sBAAsB,SAAtB,sBAAsB;IAE/B,YACY,gBAAkC,EAClC,eAAgC;QADhC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAH9C,cAAS,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;QAKrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,2DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3G,CAAC;CACJ;;YApC0C,oEAAgB;YAGlD,8EAAe;;AAyBX,sBAAsB;IAlBlC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,0FAA6B;YAC7B,+EAAiB;YACjB,mEAAe,CAAC,QAAQ,CAAC;gBACvB,MAAM,EAAE;oBACJ,OAAO,EAAE,mEAAe;oBACxB,UAAU,EAAE,qBAAqB;oBACjC,IAAI,EAAE,CAAC,gEAAU,CAAC;iBACrB;gBACD,OAAO,EAAE,IAAI;aACd,CAAC;SACH;QACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAQlC;AARkC;;;;;;;;;;;;;ACtCnC;AAAe,2EAAY,cAAc,oBAAoB,GAAG,mBAAmB,kBAAkB,GAAG,6CAA6C,+YAA+Y,E;;;;;;;;;;;;;;;;;;;;;;;;;ACA/c;AAEqB;AACjE;AACiB;AACyB;IAQtE,gBAAgB,SAAhB,gBAAgB;IAI3B,YACU,IAAY,EACZ,sBAAkD,EAClD,MAAc,EACd,mBAA4C;QAH5C,SAAI,GAAJ,IAAI,CAAQ;QACZ,2BAAsB,GAAtB,sBAAsB,CAA4B;QAClD,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAyB;QAPtD,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,qBAAgB,GAAoB,EAAE,CAAC;QAQrC,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAM,GAAG,EAAC,EAAE,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAS,EAAE,CAAC;oBAC9B,IAAI,CAAC,gBAAgB,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,EAAE,CAAC;gBAClF,CAAC,EAAC,CAAC;aACJ;QACH,CAAC,EAAC,CAAC;IACL,CAAC;IAEK,QAAQ;;YACZ,IAAI,CAAC,gBAAgB,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,EAAE,CAAC;QAClF,CAAC;KAAA;IAEK,eAAe;;YACnB,MAAM,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,EAAE,EAAE,CAAC,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,kBAAkB,CAAC,MAAM,EAAE,EAAE;;YACjC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAM,YAAY,EAAC,EAAE,CAAC;gBAC9C,IAAI,YAAY,CAAC,EAAE,KAAK,EAAE,EAAE;oBAC1B,YAAY,CAAC,6EAAmB,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;oBAC1D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;wBAC1B,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC,CAAM,OAAO,EAAC,EAAE,CAAC;4BAClD,MAAM,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;wBAC/E,CAAC,EAAC,CAAC;qBACJ;yBAAM;wBACL,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;qBACxD;oBACD,OAAO,YAAY,CAAC;iBACrB;YACH,CAAC,EAAC,CAAC;YACH,MAAM,IAAI,CAAC,sBAAsB,CAAC,gCAAgC,CAAC,EAAE,EAAE,6EAAmB,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACrH,CAAC;KAAA;IAEK,gBAAgB;;YACpB,MAAM,IAAI,CAAC,mBAAmB,CAAC,yBAAyB,EAAE,CAAC;QAC7D,CAAC;KAAA;IAEK,oBAAoB;;YACxB,MAAM,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,CAAC;QACxD,CAAC;KAAA;CAEF;;YA/D2B,oDAAM;YAFV,iGAA0B;YACzC,sDAAM;YAHN,2FAAuB;;AAanB,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,oFAAuC;;KAExC,CAAC;GACW,gBAAgB,CAsD5B;AAtD4B;;;;;;;;;;;;;;;;;;;;ACbY;AACc;AAEA;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;IAMW,6BAA6B,SAA7B,6BAA6B;CAAG;AAAhC,6BAA6B;IAJzC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,6BAA6B,CAAG;AAAH","file":"notification-notification-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{'exercise_schedule_notification' | translate}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ng-container *ngFor=\\\"let notification of notificationList\\\">\\n      <ion-item>\\n        <ion-label [routerLink]=\\\"['/notification-detail', notification.id]\\\">\\n          {{notification.time | amPm}}\\n        </ion-label>\\n        <ion-toggle class=\\\"notification-toggle\\\" slot=\\\"end\\\" mode=\\\"ios\\\"\\n        [checked]=\\\"notification.status\\\"\\n        (ionChange)=\\\"toggleNotification($event, notification.id)\\\"></ion-toggle>\\n      </ion-item>\\n    </ng-container>\\n  </ion-list>\\n  <button (click)=\\\"getNotifications()\\\">get</button>\\n  <button (click)=\\\"clearAllNotification()\\\">clear all</button>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-button expand=\\\"full\\\" (click)=\\\"addNotification()\\\">\\n    추가\\n  </ion-button>\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationPageRoutingModule } from './notification-routing.module';\n\nimport { NotificationPage } from './notification.page';\nimport { SharedPipesModule } from 'src/pipes/shared-pipes.module';\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { map } from 'rxjs/operators';\nimport { LanguageService } from 'src/services/language.service';\nimport { HttpClient } from '@angular/common/http';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/notification/', '.json');\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationPageRoutingModule,\n    SharedPipesModule,\n    TranslateModule.forChild({\n      loader: {\n          provide: TranslateLoader,\n          useFactory: createTranslateLoader,\n          deps: [HttpClient]\n      },\n      isolate: true\n    })\n  ],\n  declarations: [NotificationPage]\n})\nexport class NotificationPageModule {\n  language$ = this.languageService.language$;\n    constructor(\n        private translateService: TranslateService,\n        private languageService: LanguageService,\n    ) {\n        this.language$.pipe(map(language => language.lang)).subscribe(lang => this.translateService.use(lang));\n    }\n}\n","export default \"ion-label {\\n  margin: 0;\\n  padding: 11px 0;\\n}\\nion-label:focus {\\n  outline: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vdGlmaWNhdGlvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxTQUFBO0VBQ0EsZUFBQTtBQUNGO0FBQUU7RUFDRSxhQUFBO0FBRUoiLCJmaWxlIjoibm90aWZpY2F0aW9uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1sYWJlbCB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDExcHggMDtcclxuICAmOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\";","import { PushNotificationService } from './../../services/push-notification.service';\nimport { Subject } from 'rxjs';\nimport { INotification, NotificationSettingService } from './../../services/notification-setting.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { NOTIFICATION_STATUS, NOTIFICATION_TIME } from 'src/constants/storage-key';\nimport { ILocalNotification } from '@ionic-native/local-notifications/ngx';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.page.html',\n  styleUrls: ['./notification.page.scss'],\n})\nexport class NotificationPage implements OnInit {\n  notificationTime: any = '';\n  notificationList: INotification[] = [];\n\n  constructor(\n    private zone: NgZone,\n    private notificationSettingSvc: NotificationSettingService,\n    private router: Router,\n    private pushNotificationSvc: PushNotificationService\n    ) {\n    this.notificationSettingSvc.updateNotification.subscribe(async obs => {\n      if (obs) {\n        await this.zone.run(async () => {\n          this.notificationList = await this.notificationSettingSvc.getNotificationList();\n        });\n      }\n    });\n  }\n\n  async ngOnInit() {\n    this.notificationList = await this.notificationSettingSvc.getNotificationList();\n  }\n\n  async addNotification() {\n    await this.notificationSettingSvc.addNewNotification().then(id => {\n      this.router.navigate(['/notification-detail', id]);\n    });\n  }\n\n  async toggleNotification($event, id) {\n    this.notificationList.map(async notification => {\n      if (notification.id === id) {\n        notification[NOTIFICATION_STATUS] = $event.detail.checked;\n        if (!$event.detail.checked) {\n          notification.repeatWeekday.forEach(async weekday => {\n            await this.pushNotificationSvc.deleteNotificationById(+`${id}${weekday.id}`);\n          });\n        } else {\n          this.pushNotificationSvc.setNotification(notification);\n        }\n        return notification;\n      }\n    });\n    await this.notificationSettingSvc.updateNotificationWithProperties(id, NOTIFICATION_STATUS, $event.detail.checked);\n  }\n\n  async getNotifications() {\n    await this.pushNotificationSvc.getScheduledNotifications();\n  }\n\n  async clearAllNotification() {\n    await this.pushNotificationSvc.clearAllNotification();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationPage } from './notification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}