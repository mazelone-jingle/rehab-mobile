{"version":3,"sources":["./src/services/ble.service.ts","./src/services/alert.service.ts","./src/constants/watch-ble-command.ts"],"names":[],"mappings":"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","file":"default~ble-test-ble-test-module~exercise-setting-exercise-setting-module~home-home-module~real-time~fb9b818b.js","sourcesContent":["import { LoadingService } from './loading.service';\nimport { BehaviorSubject, Subject, throwError, TimeoutError, timer, Observable, Subscription, AsyncSubject, ReplaySubject } from 'rxjs';\nimport { catchError, takeUntil, tap } from 'rxjs/operators';\nimport {\n  COMMAND_TYPE_BAT, COMMAND_TYPE_RHD, COMMAND_TYPE_RND, COMMAND_TYPE_ROK, COMMAND_TYPE_RTE,\n  COMMAND_TYPE_RTH, COMMAND_TYPE_RTS, COMMAND_TYPE_STE, COMMAND_TYPE_STH, COMMAND_TYPE_STS,\n  RESPONSE_TYPE_ERR, RESPONSE_TYPE_SSE, RESPONSE_TYPE_THR, COMMAND_TYPE_REQ, RESPONSE_CONFIG_BUSY\n} from 'src/constants/watch-ble-command';\nimport { environment } from 'src/environments/environment';\nimport { AlertService } from 'src/services/alert.service';\nimport { LoggerService } from 'src/services/logger.service';\n\nimport { Injectable, NgZone } from '@angular/core';\nimport { BLE } from '@ionic-native/ble/ngx';\n\n\nconst scanSec = environment.bleScanSec;  // 5초 동안 검색\nconst service = environment.bleDeviceService;\nconst wearable2mobile = environment.wearable2mobile;  // Wearable 2 Mobile,\nconst mobile2wearable = environment.mobile2wearable;  // Mobile 2 Wearable, notification을 등록하면 실패해야 함.\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BleService {\n  interval: NodeJS.Timeout;\n  timer = new BehaviorSubject<number>(environment.connectExpiredTime);\n\n  commandInterval: NodeJS.Timeout;\n  commandTimer = new BehaviorSubject<number>(5);\n  commandCheckResponse$: Subject<string>;\n\n  // Device\n  deviceId: string = null;\n\n  // BLE\n  services = [service];\n  characteristics = [wearable2mobile, mobile2wearable];\n  characteristic = mobile2wearable;\n  peripheral: any;\n\n  // service\n  serviceTypeSubject = new Subject<string>();\n  serviceType$ = this.serviceTypeSubject.asObservable();\n  serviceType: string;\n\n  // data\n  BATServiceSubject = new Subject<string>();\n  BATService$ = this.BATServiceSubject.asObservable();\n  RNDServiceSubject = new Subject<string>();\n  RNDService$ = this.RNDServiceSubject.asObservable();\n  RHDServiceSubject = new Subject<string>();\n  RHDService$ = this.RHDServiceSubject.asObservable();\n  REQServiceSubject = new Subject<string>();\n  REQService$ = this.REQServiceSubject.asObservable();\n  ROKServiceSubject = new Subject<string>();\n  ROKService$ = this.ROKServiceSubject.asObservable();\n  STSServiceSubject = new Subject<string>();\n  STSService$ = this.STSServiceSubject.asObservable();\n  STHServiceSubject = new Subject<string>();\n  STHService$ = this.STHServiceSubject.asObservable();\n  STEServiceSubject = new Subject<string>();\n  STEService$ = this.STEServiceSubject.asObservable();\n  RTSServiceSubject = new Subject<string>();\n  RTSService$ = this.RTSServiceSubject.asObservable();\n  RTHServiceSubject = new Subject<string>();\n  RTHService$ = this.RTHServiceSubject.asObservable();\n  RTEServiceSubject = new Subject<string>();\n  RTEService$ = this.RTEServiceSubject.asObservable();\n\n  THRResponseSubject = new Subject<string>();\n  THRResponse$ = this.THRResponseSubject.asObservable();\n  SSEResponseSubject = new Subject<string>();\n  SSEResponse$ = this.SSEResponseSubject.asObservable();\n\n  // realtime data\n  realtimeDataSubject = new Subject<string>();\n  realtimeData$ = this.realtimeDataSubject.asObservable();\n  isAutoDisconnect = false;\n\n  timeSubscription = new Subscription();\n  commandTimeSubscription = new Subscription();\n\n  constructor(\n    private ble: BLE,\n    private loggerSvc: LoggerService,\n    private alertSvc: AlertService,\n    private zone: NgZone,\n    private loadingSvc: LoadingService) {\n    this.serviceType$.subscribe(serviceType => {\n      this.serviceType = serviceType;\n    });\n\n    // run when app is being closed\n    window.addEventListener('beforeunload', async () => {\n      await this.disconnect();\n    });\n  }\n\n  checkBleAvailable(): Promise<boolean> {\n    return new Promise((resolve, reject) => this.ble.isEnabled()\n      .then(() => resolve(true))\n      .catch(() => reject(false)));\n  }\n\n  enableBle(): Promise<boolean> {\n    return new Promise((resolve, reject) => this.ble.enable()\n      .then(() => resolve(true))\n      .catch(() => reject(false)));\n  }\n\n  isConnected(): Promise<boolean> {\n    if (this.deviceId) {\n      return new Promise((resolve, reject) => this.ble.isConnected(this.deviceId)\n        .then(() => resolve(true))\n        .catch(() => resolve(false)));\n    }\n    return Promise.resolve(false);\n  }\n\n  scan() {\n    this.deviceId = null;\n\n    return this.ble.scan(this.services, scanSec)  // Rehab device만 찾기\n      .pipe(\n        takeUntil(timer(scanSec * 1000 + 100)),\n        catchError(error => {\n          if (error instanceof TimeoutError) {\n            return throwError('Timeout Exception');\n          }\n\n          // Return other errors\n          return throwError(error);\n        })\n      );;\n  }\n\n\n  connect(deviceId: string) {\n    return this.ble.connect(deviceId)\n      .pipe(\n        tap((peripheral) => {\n          this.isAutoDisconnect = false;\n          this.deviceId = deviceId;\n          this.peripheral = peripheral;\n          this.loggerSvc.log('peripheral', peripheral);\n          this.resetTimer();\n          this.timeSubscription = this.timer.subscribe(obs => {\n            this.zone.runOutsideAngular(() => {\n              let expiredTime = obs;\n              this.interval = setInterval(async () => {\n                expiredTime--;\n                // console.warn('======= expired time:', expiredTime);\n                if (expiredTime === 0) {\n                  await this.disconnect();\n                };\n              }, 1000);\n            });\n          });\n          this.registerNotification();\n        }),\n        catchError(e => {\n          this.loggerSvc.error('connect', e);\n          this.timeSubscription.unsubscribe();\n          clearInterval(this.interval);\n          if (!this.isAutoDisconnect) {\n            return throwError(e);\n          }\n        })\n      );\n  }\n\n  disconnect() {\n    if (!!this.deviceId) {\n      this.timeSubscription.unsubscribe();\n      this.isAutoDisconnect = true;\n      clearInterval(this.interval);\n      clearInterval(this.commandInterval);\n      return this.ble.disconnect(this.deviceId);\n    }\n  }\n\n  writeCommand(command: string, serviceType: string = command) {\n    this.resetTimer();\n    const commandAb = this.str2ab(command);\n    this.loggerSvc.log('command', [command, commandAb]);\n    return new Promise((resolve, reject) => {\n      this.serviceTypeSubject.next(serviceType);\n      setTimeout(() => {\n        this.ble.write(this.deviceId, service, mobile2wearable, commandAb)\n          .then(res => {\n            // TODO: 테스트 필요함\n            this.commandCheckResponse$ = new Subject<string>();\n            this.commandTimeSubscription = this.commandTimer.subscribe(obs => {\n              this.zone.runOutsideAngular(() => {\n                let expiredTime = obs;\n                this.commandInterval = setInterval(async () => {\n                  expiredTime--;\n                  // console.warn(`======= ${command} expired time: ${expiredTime}`);\n                  if (expiredTime === 0) {\n                    await this.disconnect();\n                  }\n                }, 1000);\n              });\n            });\n            resolve(this.ab2str(res));\n          })\n          .catch(async err => {\n            await this.loadingSvc.dismiss();\n\n            // TODO: 테스트 필요함\n            if (await this.ble.isConnected) {\n              await this.writeCommand(command, serviceType);\n            }\n            return reject(this.ab2str(err));\n          });\n      }, 100);\n    });\n  }\n\n  handleBAT(result) {\n    return result.substring(result.lastIndexOf('#') + 1, result.lastIndexOf('@'));\n  }\n\n  private registerNotification() {\n    this.ble.startNotification(this.deviceId, service, wearable2mobile)\n      // ## success callback data type => [ArrayBuffer, 0]\n      .subscribe(async (res: [ArrayBuffer, number]) => {\n\n        this.resetTimer();\n        // startNotification에 대한 성공여부가 아니라, notification을 통한 data 전달상황에서 호출.\n        const data: string = this.ab2str(res[0]);\n\n        // TODO: 5초후 res === undefined => disconnect\n        // this.commandCheckResponse$.next(data);\n        clearInterval(this.commandInterval);\n        this.commandTimeSubscription.unsubscribe();\n\n        if (data === RESPONSE_TYPE_SSE) {\n          this.serviceType = RESPONSE_TYPE_SSE;\n        } else if (data === RESPONSE_TYPE_ERR || data === RESPONSE_CONFIG_BUSY) {\n          this.loadingSvc.dismiss();\n          const msg = `시계에서 문제 발생했습니다. 시계를 다시 설치해주세요.`;\n          await this.alertSvc.presentAlert(msg, false, () => this.disconnect());\n          return;\n        }\n\n        // this.commandTimeSubscription.unsubscribe();\n        // clearInterval(this.commandInterval);\n\n        this.loggerSvc.log(`${this.serviceType} noti data ${service}, ${wearable2mobile}`, data);\n\n        switch (this.serviceType) {\n          case COMMAND_TYPE_BAT:\n            this.BATServiceSubject.next(data);\n            break;\n          case COMMAND_TYPE_RND:\n            this.RNDServiceSubject.next(data);\n            break;\n          case COMMAND_TYPE_RHD:\n            this.RHDServiceSubject.next(data);\n            break;\n          case COMMAND_TYPE_REQ:\n            this.REQServiceSubject.next(data);\n            break;\n          case COMMAND_TYPE_ROK:\n            this.ROKServiceSubject.next(data);\n            break;\n          case COMMAND_TYPE_STS:\n            this.STSServiceSubject.next(data);\n            break;\n          case COMMAND_TYPE_STH:\n            this.STHServiceSubject.next(data);\n            break;\n          case COMMAND_TYPE_STE:\n            this.STEServiceSubject.next(data);\n            break;\n          case COMMAND_TYPE_RTS:\n            this.RTSServiceSubject.next(data);\n            break;\n          case COMMAND_TYPE_RTH:\n            this.RTHServiceSubject.next(data);\n            break;\n          case COMMAND_TYPE_RTE:\n            this.RTEServiceSubject.next(data);\n            break;\n          case RESPONSE_TYPE_THR:\n            this.THRResponseSubject.next(data);\n            break;\n          case RESPONSE_TYPE_SSE:\n            this.SSEResponseSubject.next(data);\n            break;\n          default:\n            break;\n        }\n      }, err => {\n        // 잘못된 startNotification 요청에 대해서 error callback 정상작동 확인.\n        const data = this.ab2str(err);\n        this.loggerSvc.log(`noti err ${service}, ${wearable2mobile}`, data);\n      });\n  }\n\n  // ArrayBuffer, String convert\n  private ab2str(buf: ArrayBuffer) {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n  }\n\n  private str2ab(str: string) {\n    const array = new Uint8Array(str.length + 1);\n    for (let i = 0, l = str.length; i < l; i++) {\n      array[i] = str.charCodeAt(i);\n    }\n    array[str.length] = 0;  // 종료문자열을 넣어야 함.\n    return array.buffer;\n  }\n\n  private resetTimer() {\n    clearInterval(this.interval);\n    this.timer.next(environment.connectExpiredTime);\n  }\n\n  private resetCommandTimer() {\n    clearInterval(this.commandInterval);\n    this.commandTimer.next(5);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private alertController: AlertController) { }\n\n  async presentAlert(msg: string, backdropDismiss: boolean = true, callback = () => {}) {\n    const alert = await this.alertController.create({\n      message: msg,\n      buttons: [{\n        text: '확인',\n        handler: callback\n      }],\n      backdropDismiss,\n    });\n\n    await alert.present();\n  }\n\n  async presentCustomizeAlert(options) {\n    const alert = await this.alertController.create(options);\n    await alert.present();\n  }\n\n}\n","export const COMMAND_TYPE_BAT = 'BAT#@';\r\nexport const COMMAND_TYPE_RND = 'RND#@';\r\nexport const COMMAND_TYPE_RHD = 'RHD#@';\r\nexport const COMMAND_TYPE_ROK = 'ROK#@';\r\nexport const COMMAND_TYPE_REQ = 'REQ#@';\r\nexport const COMMAND_TYPE_STS = 'STS#@';\r\nexport const COMMAND_TYPE_STH = 'STH#@';\r\nexport const COMMAND_TYPE_STE = 'STE#@';\r\nexport const COMMAND_TYPE_RTS = 'RTS#@';\r\nexport const COMMAND_TYPE_RTH = 'RTH#@';\r\nexport const COMMAND_TYPE_RTE = 'RTE#@';\r\nexport const COMMAND_TYPE_SSE = 'SSE#@';\r\n\r\nexport const RESPONSE_TYPE_HDA = 'HDA#@';\r\nexport const RESPONSE_TYPE_NDA = 'NDA#@';\r\nexport const RESPONSE_TYPE_END = 'END#@';\r\nexport const RESPONSE_TYPE_STS = 'STS#OK@';\r\nexport const RESPONSE_TYPE_STH = 'STH#OK@';\r\nexport const RESPONSE_TYPE_STE = 'STE#OK@';\r\nexport const RESPONSE_TYPE_SSE = 'SSE#@';\r\nexport const RESPONSE_TYPE_THR = 'THR#@';\r\n\r\nexport const RESPONSE_TYPE_ERR = 'ERR#';\r\nexport const RESPONSE_CONFIG_BUSY = 'CONFIG BUSY';\r\n"],"sourceRoot":"webpack:///"}