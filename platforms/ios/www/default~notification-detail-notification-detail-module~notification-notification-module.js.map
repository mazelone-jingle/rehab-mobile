{"version":3,"sources":["./src/pipes/file-name.pipe.ts","./src/pipes/shared-pipes.module.ts","./src/pipes/min-sec.pipe.ts","./src/services/alert.service.ts","./src/pipes/am-pm.pipe.ts","./src/services/notification-setting.service.ts","./src/services/push-notification.service.ts"],"names":[],"mappings":"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","file":"default~notification-detail-notification-detail-module~notification-notification-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fileName'\n})\nexport class FileNamePipe implements PipeTransform {\n\n  transform(fileUrl: string): string {\n    if(fileUrl) {\n      return fileUrl.substring(fileUrl.lastIndexOf('/') + 1);\n    }\n    return '--'\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { AmPmPipe } from './am-pm.pipe';\r\nimport { FileNamePipe } from './file-name.pipe';\r\nimport { MinSecPipe } from './min-sec.pipe';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [\r\n    AmPmPipe,\r\n    FileNamePipe,\r\n    MinSecPipe\r\n  ],\r\n  exports: [\r\n    AmPmPipe,\r\n    FileNamePipe,\r\n    MinSecPipe\r\n  ]\r\n})\r\nexport class SharedPipesModule { }\r\n","import { LANG_KO } from 'src/constants/common';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Pipe({\n  name: 'minSec'\n})\nexport class MinSecPipe implements PipeTransform {\n\n  constructor(private  translateService: TranslateService) {}\n\n  transform(seconds: number): string {\n    let min = 0;\n    let sec = 0;\n    if (seconds >= 60) {\n      min = Math.floor(seconds / 60);\n    }\n    sec = seconds % 60;\n    if (this.translateService.currentLang === LANG_KO) {\n      return `${min}분 ${sec}초`;\n    } else {\n      return `${min}Min ${sec}Sec`\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private alertController: AlertController) { }\n\n  async presentAlert(msg: string, backdropDismiss: boolean = true, callback = () => {}) {\n    const alert = await this.alertController.create({\n      message: msg,\n      buttons: [{\n        text: '확인',\n        handler: callback\n      }],\n      backdropDismiss,\n    });\n\n    await alert.present();\n  }\n\n  async presentCustomizeAlert(options) {\n    const alert = await this.alertController.create(options);\n    await alert.present();\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'amPm'\n})\nexport class AmPmPipe implements PipeTransform {\n\n  transform(time: string): string {\n    if (time !== '--'){\n      let h = +(time.substring(0, time.indexOf(':')))\n      const m = time.substring(time.indexOf(':') + 1);\n      let timeText = 'AM';\n      if (h >= 12) {\n        timeText = 'PM';\n        if (h >12) {\n          h = h - 12;\n        }\n      }\n      return `${timeText} ${h}:${m}`\n    }\n    return time;\n  }\n\n}\n","import { LoggerService } from './logger.service';\nimport { StorageService } from './storage.service';\nimport { Injectable } from '@angular/core';\nimport { NOTIFICATION_LIST } from 'src/constants/storage-key';\nimport { Subject } from 'rxjs';\nimport { ILocalNotification } from '@ionic-native/local-notifications';\n\nexport interface INotification {\n  id: number;\n  status: boolean;\n  time: string;\n  sound: boolean;\n  vibration: boolean;\n  music: string;\n  repeatWeekday: any[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationSettingService {\n  updateNotification = new Subject();\n  constructor(private storageSvc: StorageService, private loggerSvc: LoggerService) { }\n\n  async getNotificationList(): Promise<INotification[]> {\n    const res = await this.storageSvc.get(NOTIFICATION_LIST);\n    return res? res : [];\n  }\n\n  async addNewNotification() {\n    const id = Date.now();\n    return await this.getNotificationList().then(async notificationList => {\n      const notification: INotification = {\n        id,\n        status: true,\n        time: '',\n        sound: true,\n        vibration: true,\n        music: '',\n        repeatWeekday: []\n      };\n      if (notificationList) {\n        notificationList.push(notification);\n      } else {\n        notificationList = [notification];\n      }\n      return await this.storageSvc.set(NOTIFICATION_LIST, notificationList).then(() => id);\n    });\n  }\n\n  async getNotificationById(id: number): Promise<INotification> {\n    return await this.getNotificationList().then(notificationList => notificationList.filter(notification => notification.id === id)[0]);\n  }\n\n  async saveNotificationById(id: number, updatedNotification: INotification): Promise<void> {\n    await this.getNotificationList().then(async notificationList => {\n      const newList = notificationList.map(notification => {\n        if (notification.id === id) {\n          return updatedNotification;\n        }\n        return notification;\n      });\n      await this.storageSvc.set(NOTIFICATION_LIST, newList);\n    });\n  }\n\n  async updateNotificationWithProperties(id: number, propertyKey: string, value: any): Promise<void> {\n    await this.getNotificationList().then(async notificationList => {\n      const newList = notificationList.map(notification => {\n        if (notification.id === id) {\n          notification[propertyKey] = value;\n          this.loggerSvc.log(notification);\n          return notification;\n        }\n        return notification;\n      });\n      await this.storageSvc.set(NOTIFICATION_LIST, newList);\n    });\n  }\n}\n","import { WEEKDAYS } from './../constants/common';\nimport { StorageService } from './storage.service';\nimport { Injectable } from '@angular/core';\nimport {\n    ELocalNotificationTriggerUnit, ILocalNotification, ILocalNotificationEvery, LocalNotifications\n} from '@ionic-native/local-notifications/ngx';\nimport { Platform } from '@ionic/angular';\n\nimport { AlertService } from './alert.service';\nimport { INotification } from './notification-setting.service';\nimport { NOTIFICATION_LIST } from 'src/constants/storage-key';\n\ndeclare const cordova;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PushNotificationService {\n\n  constructor(\n    private localNotifications: LocalNotifications,\n    private platForm: Platform,\n    private alertSvc: AlertService,\n    private storageSvc: StorageService\n    ) {\n    this.platForm.ready().then(() => {\n      this.localNotifications.on('click').subscribe(async res => {\n        console.log('click:', res);\n      //   let msg = res.data ? res.data.page : ''\n      //   await this.alertSvc.presentCustomizeAlert({\n      //     message: msg,\n      //     title: res.title,\n      //     subTitle: res.text,\n      //     backDropDismiss:  false,\n      //     buttons: [{\n      //       text: '확인',\n      //     }]\n      //   })\n      });\n\n      this.localNotifications.on('trigger').subscribe(async res => {\n        console.log('trigger:', res);\n      //   let msg = res.data ? res.data.page : ''\n      //   await this.alertSvc.presentCustomizeAlert({\n      //     message: msg,\n      //     title: res.title,\n      //     subTitle: res.text,\n      //     backDropDismiss:  false,\n      //     buttons: [{\n      //       text: '확인',\n      //     }]\n      //   })\n      });\n    });\n  }\n\n  prepareNotification(title: string, text: string) {\n    this.localNotifications.schedule({\n      title,\n      text,\n    });\n  }\n\n  scheduleNotification2(title: string, text: string) {\n    this.localNotifications.schedule({\n      title,\n      text,\n      data: {data: 'routing...'},\n      trigger: {in: 5, unit: ELocalNotificationTriggerUnit.SECOND},\n      foreground: true\n    });\n  }\n\n  recurringNotification(title: string, text: string) {\n    this.localNotifications.schedule({\n      title,\n      text,\n      data: {page: 'routing...'},\n      trigger: {in: 5, unit: ELocalNotificationTriggerUnit.SECOND},\n      foreground: true\n    });\n  }\n\n  setNotification(notification: INotification) {\n    notification.repeatWeekday.forEach((weekday) => {\n      const hour = +notification.time.substring(0, notification.time.indexOf(':'));\n      const minute = +notification.time.substring(notification.time.indexOf(':') + 1);\n      const alarm =  {\n        id: +`${notification.id}${weekday.id}`,\n        title: '운동시간입니다',\n        text: '운동합시다!!!',\n        // data: { page: 'routing...' },\n        vibrate: notification.vibration,\n        silent: !notification.sound,\n        sound: notification.music,\n        count: 1,\n        every: { weekday: weekday.id, hour, minute, second: 0 } as ILocalNotificationEvery,\n        foreground: true,\n      };\n      this.scheduleNotification(alarm);\n    });\n  }\n\n  scheduleNotification(options: ILocalNotification) {\n    this.localNotifications.schedule(options);\n    // cordova.plugins.notification.local.schedule(options);\n  }\n\n  async deleteNotificationById(id: number) {\n    await this.localNotifications.cancel(id);\n  }\n\n  async getScheduledNotifications() {\n    const notis = await this.localNotifications.getAll();\n    console.warn(notis);\n  }\n\n  async clearAllNotification() {\n    await this.localNotifications.cancelAll();\n    await this.localNotifications.clearAll();\n    await this.storageSvc.remove(NOTIFICATION_LIST);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}