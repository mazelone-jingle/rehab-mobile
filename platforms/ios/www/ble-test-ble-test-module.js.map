{"version":3,"sources":["./src/app/ble-test/ble-test.page.scss","./src/app/ble-test/ble-test-routing.module.ts","./src/app/ble-test/ble-test.module.ts","./src/app/ble-test/ble-test.page.ts","./src/app/ble-test/ble-test.page.html"],"names":[],"mappings":"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","file":"ble-test-ble-test-module.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJibGUtdGVzdC5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BleTestPage } from './ble-test.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BleTestPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BleTestPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BleTestPageRoutingModule } from './ble-test-routing.module';\n\nimport { BleTestPage } from './ble-test.page';\nimport { BLE } from '@ionic-native/ble';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BleTestPageRoutingModule\n  ],\n  declarations: [BleTestPage],\n})\nexport class BleTestPageModule { }\n","import { Component, NgZone } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { BleService } from 'src/services/ble.service';\n\n@Component({\n  selector: 'app-ble-test',\n  templateUrl: './ble-test.page.html',\n  styleUrls: ['./ble-test.page.scss'],\n})\nexport class BleTestPage {\n  scanning: any = null;\n  commands = ['RND#@', 'BAT#@', 'RTS#@', 'DEL#@', 'RTH#@', 'RTE#@', 'RHD#@', 'ROK#@', 'REQ#@'];\n  selectedCommand = 'BAT#@';\n  // devices: Array<any> = [{ name: 'Rehab01', id: 'F2:A2:41:F5:C3:12', advertising: [], rssi: -70 }];\n  devices: Array<any> = [];\n  connectedDeviceId: string = null;\n  peripheral: any;\n\n  constructor(\n    private zone: NgZone\n    , private loadingController: LoadingController\n    , private ble: BleService) {\n  }\n\n  async scan() {\n    await this.presentScanning();\n    this.ble.scan()\n      .pipe(finalize(() => this.dismissScanning()))\n      .subscribe(device => {\n        this.devices.length = 0;\n        this.zone.run(() => {\n          if (this.devices.indexOf(d => d.id == device.id) < 0) {\n            this.devices.push(device);\n          }\n          console.log('devices', device);\n        });\n      })\n  }\n\n  connect(deviceId: string) {\n    if (confirm('연결하시겠습니까?')) {\n      this.connectedDeviceId = deviceId;\n      this.ble.connect(deviceId)\n        .subscribe((peripheral) => {\n          this.connectedDeviceId = deviceId;\n          this.peripheral = peripheral;\n          console.log('peripheral', peripheral);\n        });\n    }\n  }\n\n  disconnect() {\n    if (!!this.connectedDeviceId) {\n      this.ble.disconnect()\n        .then(res => {\n          alert('disconnected');\n          console.log('disconnected', res);\n          this.connectedDeviceId = null;\n        }).catch(err => {\n          alert(`disconnect fail, ${err}`);\n        });\n    }\n  }\n\n  writeCommand() {\n    this.ble.writeCommand(this.selectedCommand)\n      .then(res => console.log(`write ${this.selectedCommand} ok`, res))\n      .catch(err => console.log(`write ${this.selectedCommand} err`, err));\n  }\n\n  test() {\n    console.log(this);\n  }\n\n  async presentScanning() {\n    this.scanning = await this.loadingController.create({\n      message: 'Scan...',\n      duration: 5 * 1000\n    });\n    await this.scanning.present();\n  }\n\n  async dismissScanning() {\n    await this.scanning.dismiss();\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>ble-test</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item>\\n      <ion-button expand=\\\"full\\\" (click)=\\\"scan()\\\">SCAN</ion-button><br />\\n    </ion-item>\\n\\n    <ion-item *ngFor=\\\"let device of devices\\\" (click)=\\\"connect(device.id)\\\">\\n      {{device | json}}\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-button [disabled]=\\\"!connectedDeviceId\\\" expand=\\\"full\\\" (click)=\\\"disconnect()\\\">DISCONNECT</ion-button><br />\\n    </ion-item>\\n\\n    <ion-radio-group [(ngModel)]=\\\"selectedCommand\\\">\\n      <ion-list-header>\\n        <ion-label>Commands</ion-label>\\n      </ion-list-header>\\n      <ion-item *ngFor=\\\"let command of commands\\\">\\n        <ion-label>{{command | uppercase}}</ion-label>\\n        <ion-radio slot=\\\"start\\\" color=\\\"success\\\" [value]=\\\"command\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n\\n    <ion-item>\\n      <ion-button expand=\\\"full\\\" color=\\\"danger\\\" [disabled]=\\\"!connectedDeviceId\\\" (click)=\\\"writeCommand()\\\">WRITE\\n      </ion-button><br />\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-button (click)=\\\"test()\\\">TEST</ion-button>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}